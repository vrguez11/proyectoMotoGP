/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package motogp;

import Renderer.CampeonRenderer;
import Renderer.ImagesRenderer;
import Renderer.SueldoRenderer;
import entities.Pilotos;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableCellRenderer;

/**
 *
 * @author usuario
 */
public class Main extends javax.swing.JFrame {

    ModeloTabla modelo;
    Pilotos piloto;
    boolean isNuevo;
    

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
        //Centrar la ventana al iniciar la aplicación
        setLocationRelativeTo(null);
        //Cambia el icono de la aplicación
        setIconImage(new ImageIcon(getClass().getResource("/images/motogplogo1.png")).getImage());

        //Pone por defecto los campos de clasificacion y puntos deshabilitados para...
        //...que no puedan editarse
        panelPilotos2.setFalse();

        //Asignar la lista de datos a la tabla
        modelo = new ModeloTabla();
        modelo.setDataList(list1);
        jTable1.setModel(modelo);

        //Alinear a la derecha las cantidades
        DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
        rightRenderer.setHorizontalAlignment(SwingConstants.RIGHT);
        jTable1.getColumnModel().getColumn(0).setCellRenderer(rightRenderer);

        //Cambiar ancho de columnas
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(118);
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(83);
        jTable1.getColumnModel().getColumn(2).setPreferredWidth(48);
        jTable1.getColumnModel().getColumn(3).setPreferredWidth(182);
        jTable1.getColumnModel().getColumn(4).setPreferredWidth(90);
        jTable1.getColumnModel().getColumn(5).setPreferredWidth(127);
        jTable1.getColumnModel().getColumn(6).setPreferredWidth(110);

        //Sólo se permite seleccionar un registro
        jTable1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        //Llamada a la clase SueldoRenderer para el formato moneda
        jTable1.getColumnModel().getColumn(5).setCellRenderer(new SueldoRenderer());
        //Llamada a la clase ImagesRenderer para mostrar las imagenes
        jTable1.getColumnModel().getColumn(1).setCellRenderer(new ImagesRenderer());
        //Llamada a la clase CampeonRenderer para mostrar las imagenes de si un piloto es vigente campeón
        jTable1.getColumnModel().getColumn(6).setCellRenderer(new CampeonRenderer());
        //Detectar cambio de selección en la tabla
        jTable1.getSelectionModel().addListSelectionListener(new ListSelectionListener() {

            @Override
            public void valueChanged(ListSelectionEvent e) {
                panelPilotos2.setFalse();
                int indiceFilaSeleccionada = jTable1.getSelectedRow();
                if (indiceFilaSeleccionada > -1) {
                    Pilotos piloto = list1.get(indiceFilaSeleccionada);
                    panelPilotos2.setPiloto(piloto);
                    //Muestra imagen del piloto seleccionado
                    jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/"+piloto.getNumeroPiloto()+".png")));
                    //Muestra en pantalla los datos correspondientes a cada campo
                    panelPilotos2.showData();
                }
            }

        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        entityManager1 = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("MotoGPPU").createEntityManager();
        query1 = java.beans.Beans.isDesignTime() ? null : entityManager1.createQuery("select f from Pilotos f");
        list1 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : query1.getResultList();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        panelPilotos2 = new motogp.PanelPilotos();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jToolBar1 = new javax.swing.JToolBar();
        jButtonSave = new javax.swing.JButton();
        jButtonNew = new javax.swing.JButton();
        jButtonEdit = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MotoGP™ Unofficial App");
        setBackground(java.awt.Color.red);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setBackground(new java.awt.Color(246, 246, 246));
        jTable1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 63, 780, 247));

        panelPilotos2.setBackground(new java.awt.Color(246, 246, 246));
        panelPilotos2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(panelPilotos2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 316, -1, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/0.png"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 360, 220, 200));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 0, 0));
        jLabel3.setText("VER TV");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 410, -1, 30));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/tv.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 400, -1, -1));

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/banner.gif"))); // NOI18N
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(-2, 640, 810, -1));

        jToolBar1.setBackground(new java.awt.Color(0, 0, 0));
        jToolBar1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        jButtonSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/save.png"))); // NOI18N
        jButtonSave.setFocusable(false);
        jButtonSave.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonSave.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });
        jToolBar1.add(jButtonSave);

        jButtonNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/new.png"))); // NOI18N
        jButtonNew.setFocusable(false);
        jButtonNew.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonNew.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNewActionPerformed(evt);
            }
        });
        jToolBar1.add(jButtonNew);

        jButtonEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/edit.png"))); // NOI18N
        jButtonEdit.setFocusable(false);
        jButtonEdit.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonEdit.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditActionPerformed(evt);
            }
        });
        jToolBar1.add(jButtonEdit);

        jButtonDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/remove.png"))); // NOI18N
        jButtonDelete.setFocusable(false);
        jButtonDelete.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonDelete.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });
        jToolBar1.add(jButtonDelete);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ad.png"))); // NOI18N
        jToolBar1.add(jLabel4);

        getContentPane().add(jToolBar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, -1));

        jLabel1.setBackground(new java.awt.Color(246, 246, 246));
        jLabel1.setOpaque(true);
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -5, 800, 750));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        //Si se crea un nuevo piloto, al darle al botón de guardar se...
        //...creará un nuevo piloto, en cambio, si se guardan datos...
        //...de un piloto ya existente, se sobreescribirá sin crear uno nuevo.
        if (isNuevo) {
            panelPilotos2.setPiloto(piloto);

            panelPilotos2.setData();

            entityManager1.getTransaction().begin();
            //Almacenar el objeto en la Base de Datos
            entityManager1.persist(piloto);
            entityManager1.getTransaction().commit();

            //Añadir el objeto al final de la lista de datos
            list1.add(piloto);
            //Informar al JTable que se ha insertado una fila al final
            modelo.fireTableRowsInserted(list1.size() - 1, list1.size() - 1);
        } else {
            //Obtener la fila que se encuentra seleccionado en la lista
            int selectedRow = jTable1.getSelectedRow();
            //Obtener el objeto desde la lista de datos, conociendo su posición 
            Pilotos piloto = list1.get(selectedRow);
            //Rellenar sus datos 
            panelPilotos2.setData();

            entityManager1.getTransaction().begin();
            //Actualizar el objeto en la BD 
            entityManager1.merge(piloto);
            entityManager1.getTransaction().commit();

            //Añadir el objeto al final de la lista de datos 
            list1.set(selectedRow, piloto);
            //Informar al JTable que se ha modificado la fila seleccionada 
            modelo.fireTableRowsUpdated(selectedRow, selectedRow);
        }
    }//GEN-LAST:event_jButtonSaveActionPerformed

    private void jButtonNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNewActionPerformed
        //Limpia el piloto seleccionado anteriormente
        jTable1.clearSelection();
        //Habilita los campos de texto para introducir datos
        panelPilotos2.setTrue();
        piloto = new Pilotos();
        //Limpia las campos de texto para que se cree el nuevo
        panelPilotos2.cleanData();
        //Deshabilita los campos clasificación y puntos para que,...
        //...por defecto, no esté clasificado y tenga 0 puntos
        panelPilotos2.setNew();
        //Piloto por defecto al no haber ninguno seleccionado
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/0.png")));
        //Indica que es nuevo, para usarlo en el botón guardar
        isNuevo = true;
    }//GEN-LAST:event_jButtonNewActionPerformed

    private void jButtonEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditActionPerformed
        //Habilita los campos de texto para introducir datos
        panelPilotos2.setTrue();
        //Deshabilita los campos clasificación y puntos para que,...
        //...por defecto, no esté clasificado y tenga 0 puntos
        panelPilotos2.setNew();
        //Indica que no es nuevo, para usarlo en el botón guardar
        isNuevo = false;
    }//GEN-LAST:event_jButtonEditActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        //Comprobar si hay algun piloto seleccionado en la lista
        if (jTable1.getSelectedRow() != -1) {
            //Obtener la fila que se encuentra seleccionado en la lista
            int selectedRow = jTable1.getSelectedRow();
            piloto = list1.get(selectedRow);
            int respuesta = JOptionPane.showConfirmDialog(this,
                    "¿Desea eliminar el piloto:\n" + piloto.getNombre() + "?",
                    "Borrar piloto",
                    JOptionPane.OK_CANCEL_OPTION);
            if (respuesta == JOptionPane.OK_OPTION) {
                //Borra el piloto de la base de datos y de la tabla
                //Iniciar una transacción con la BD
                entityManager1.getTransaction().begin();
                //Eliminar el piloto
                entityManager1.remove(piloto);
                //Finalizar la transacción actualizando la BD
                entityManager1.getTransaction().commit();
                //Eliminar el piloto de la lista de datos
                list1.remove(piloto);
                //Informar al JTable que se ha eliminado una fila
                modelo.fireTableRowsDeleted(selectedRow, selectedRow);
                //Limpia las campos de texto para que se cree el nuevo
                panelPilotos2.cleanData();
            }
        } else {
            JOptionPane.showMessageDialog(this,
                    "Debe seleccionar un piloto",
                    "Atención",
                    JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //Llamar a la clase Video en la que se encuentra una simulación de TV
        Video video = new Video();
        video.setLocationRelativeTo(null);
        video.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.persistence.EntityManager entityManager1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonEdit;
    private javax.swing.JButton jButtonNew;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JToolBar jToolBar1;
    private java.util.List<Pilotos> list1;
    private motogp.PanelPilotos panelPilotos2;
    private javax.persistence.Query query1;
    // End of variables declaration//GEN-END:variables
}
